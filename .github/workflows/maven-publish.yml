name: Java CI with Maven

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: 
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: online_course
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    # 设置JDK并配置Maven缓存
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    # 缓存Maven本地仓库
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    
    # 缓存构建产物
    - name: Cache Build Output
      uses: actions/cache@v3
      with:
        path: |
          **/target
          !**/target/test-classes
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-
    
    # 等待MySQL启动
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" --silent; do
          sleep 1
        done
    
    # 构建并安装base模块
    - name: Build and Install Base Module
      run: mvn clean install -pl base
      
    # 构建并测试content_service模块，使用test配置
    - name: Build and Test Content Service Module
      run: mvn clean verify -pl content_service -Dspring.profiles.active=test
      
    # 构建整个项目
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 上传构建产物
    - name: Upload Content Service Artifact
      uses: actions/upload-artifact@v3
      with:
        name: content-service
        path: content_service/target/*.jar
